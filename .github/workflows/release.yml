name: Gradle Package Build and Publish to Maven

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'corretto'
        server-id: github
        settings-path: ${{ github.workspace }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.ASSUME_ROLE_ARN }}
        aws-region: ${{ vars.AWS_REGION }}
        role-session-name: github-actions-session

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Create Gradle configuration
      run: |
        echo "passphrase"
        aws secretsmanager get-secret-value --region ${{ secrets.AWS_REGION }} --secret-id ${{ secrets.GPG_KEY_ID }} --query SecretString --output text | jq -r .passphrase > passphrase.txt

        
        echo "Step 2: Importing key"
        aws secretsmanager get-secret-value --region ${{ secrets.AWS_REGION }} --secret-id ${{ secrets.GPG_KEY_ID }} --query SecretString --output text | jq -r .privateKey | gpg --import --batch --passphrase-file passphrase.txt

        
        echo "Step 3: Getting key details"
        KEY_ID=$(gpg --list-secret-keys --keyid-format LONG | grep sec | tail -n 1 | awk '{print $2}' | cut -d'/' -f2)
        echo $KEY_ID
        
        echo "Step 4: Exporting key"
        gpg --batch --pinentry-mode=loopback --passphrase-file passphrase.txt --export-secret-keys $KEY_ID > $HOME/.gnupg/secring.gpg

        KEY_ID_SHORT=$(gpg --list-secret-keys --keyid-format SHORT | grep sec | tail -n 1 | awk '{print $2}' | cut -d'/' -f2)
        echo $KEY_ID_SHORT


        echo "Step 5: Create gradle properties file"
        echo "signingEnabled=true" > gradle.properties
        echo "mavenUsername=$(aws secretsmanager get-secret-value --region ${{ secrets.AWS_REGION }} --secret-id ${{ secrets.MAVEN_TOKEN_ID }} --query SecretString --output text | jq -r .username)" >> gradle.properties
        echo "mavenPassword=$(aws secretsmanager get-secret-value --region ${{ secrets.AWS_REGION }} --secret-id ${{ secrets.MAVEN_TOKEN_ID }} --query SecretString --output text | jq -r .password)" >> gradle.properties
        echo "signing.keyId=$KEY_ID_SHORT" >> gradle.properties
        echo "signing.password=$(aws secretsmanager get-secret-value --region ${{ secrets.AWS_REGION }} --secret-id ${{ secrets.GPG_KEY_ID }} --query SecretString --output text | jq -r .passphrase)" >> gradle.properties
        echo "signing.secretKeyRingFile=$HOME/.gnupg/secring.gpg" >> gradle.properties


    - name: Build with Gradle
      run: ./gradlew clean build

    - name: Publish to Maven Central
      run: ./gradlew publish
