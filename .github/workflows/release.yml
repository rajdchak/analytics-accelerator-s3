name: Gradle Package

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'corretto'
        server-id: github
        settings-path: ${{ github.workspace }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.ASSUME_ROLE_ARN }}
        aws-region: ${{ vars.AWS_REGION }}
        role-session-name: github-actions-session

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Create Gradle configuration
      run: |
        echo "Step 1: Setting up GPG directory"
        mkdir -p $HOME/.gnupg
        chmod 700 $HOME/.gnupg
        
        echo "Step 1: Importing key"
        aws secretsmanager get-secret-value \
          --region ${{ vars.AWS_REGION }} \
          --secret-id ${{ secrets.GPG_KEY_ID }} \
          --query SecretString \
          --output text | jq -r .privateKey | gpg --import --batch
        
        echo "Step 2: Getting key details"
        KEY_ID=$(gpg --list-secret-keys --keyid-format SHORT | grep sec | tail -n 1 | awk '{print $2}' | cut -d'/' -f2)
        echo "Using Key ID: $KEY_ID"
        
        echo "Step 3: Exporting key"
        gpg --batch --keyring $HOME/.gnupg/secring.gpg --no-default-keyring \
          --export-secret-keys > $HOME/.gnupg/secring.gpg

        echo "Step 4: Create gradle properties file"
         {
          echo "signing.enabled=true"
          echo "signing.keyId=$KEY_ID"
          echo "signing.secretKeyRingFile=$HOME/.gnupg/secring.gpg"
          echo "mavenUsername=$(aws secretsmanager get-secret-value --region ${{ vars.AWS_REGION }} --secret-id ${{ secrets.MAVEN_TOKEN_ID }} --query SecretString --output text | jq -r .username)"
          echo "mavenPassword=$(aws secretsmanager get-secret-value --region ${{ vars.AWS_REGION }} --secret-id ${{ secrets.MAVEN_TOKEN_ID }} --query SecretString --output text | jq -r .password)"
        } > gradle.properties

    - name: Build with Gradle
      run: ./gradlew clean build

    - name: Publish to Maven Central
      run: ./gradlew publish
